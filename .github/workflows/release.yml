name: release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version tag'
        required: true
      docs-identifier:
        type: choice
        description: What to use as docs identifier
        required: true
        default: 'major_minor_version'
        options:
        - major_minor_version
        - full_version

jobs:
  build:
    name: Build and publish new release
    runs-on: "ubuntu-latest"

    steps:
      - uses: actions/checkout@v4

      - uses: extractions/setup-just@v2

      - uses: astral-sh/setup-uv@v5

      - name: Check that versions match
        run: |
          echo "Input version tag: [${{ github.event.inputs.version }}] "
          PACKAGE_VERSION=$(uv run python -m vspect read .)
          echo "Package version: [$PACKAGE_VERSION]"
          [ ${{ github.event.inputs.version }} == "v$PACKAGE_VERSION" ] || { exit 1; }

      - name: Build package
        run: |
          uv build

      - name: Get docs identifier
        id: version
        run: |
          IDENTIFIER=$(uv run python -m vspect read . "{major_minor_version}")
          echo "Identifier: [$IDENTIFIER]"
          echo "::set-output name=IDENTIFIER::$IDENTIFIER"


      - name: Publish to Test PyPI
        uses: pypa/gh-action-pypi-publish@v1.3.0
        with:
          user: __token__
          password: ${{ secrets.PYPI_TEST_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
          skip_existing: true

      - name: Publish to Production PyPI
        run: |
          echo "pass"

      - name: Deploy docs to gh-pages
        working-directory: docs
        run: |
          git fetch origin gh-pages --depth=1
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
          # Rename old stable version
          # mike list -j | jq
          # OLD_STABLE=$(mike list -j | jq -r '.[] | select(.aliases | index("stable")) | .title' | awk '{print $1;}')
          # echo $OLD_STABLE
          # mike retitle stable $OLD_STABLE
          # Deploy new version as stable
          mike deploy --push --update-aliases --no-redirect \
            ${{ steps.version.outputs.major_minor_version }} \
            stable \
            --title="${{ github.event.release.tag_name }} (stable)"

      - id: extract-changelog
        uses: sean0x42/markdown-extract@v2.1.0
        with:
          file: CHANGELOG.md
          pattern: ${{ github.event.inputs.version }}

      - name: Write output to file
        run: |
          printf '${{ steps.extract-changelog.outputs.markdown }}' > __CHANGELOG-extracted.md

      - uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.event.inputs.version }}
          commit: main
          artifacts: "dist/*.whl,dist/*.tar.gz"
          bodyFile: "__CHANGELOG-extracted.md"
